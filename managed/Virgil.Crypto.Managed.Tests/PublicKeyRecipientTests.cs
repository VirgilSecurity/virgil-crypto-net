using Org.BouncyCastle.Asn1;
using Virgil.SDK.Cryptography.ASN1.Models;
using Xunit;

namespace Virgil.SDK.Cryptography.Tests
{
	public class PublicKeyRecipientTests
	{
		[Fact]
		public void Parse()
		{
			var dataoBytes();
			var id = "A6953E6E23C84DF0CA3F71311C667B32AD3EF9D8A1D2A0862CFB246A65EC9006".ToBytes();
			var ephemeralPublicKey = "7A2E7A854F6545905124364063633C6CF19EDFACFDE47A5F4BFA6FB34A895ACB".ToBytes();
			var tag = "005593F8CE0F9039BA86DECA64D7A8DB55DEEAECC2328267B51236435963AF0AC8439122E16F706EC4E8A1AA5EA7D806".ToBytes();
			var iv = "35A7280C603BC2242002BF6E00F9253A".ToBytes();
			var encryptedSymmetricKey = "2BC960C7F929625157ADB31757C9B8E84B43C310B7FA12FA50547EC17DB51AC089C535E784ADF64D3C2851ACBB4C387A".ToBytes();
			var m = PublicKeyRecipient.GetInstance(Asn1Object.FromByteArray(data));
			Assert.Equal(id,m.Id);
			Assert.Equal(ephemeralPublicKey,m.EphemeralPublicKey);
			Assert.Equal(tag,m.Tag);
			Assert.Equal(iv,m.IV);
			Assert.Equal(encryptedSymmetricKey, m.EncryptedSymmetricKey);
		}

		[Fact]
		public void Compose()
		{
			var expectedoBytes();
			var id = "A6953E6E23C84DF0CA3F71311C667B32AD3EF9D8A1D2A0862CFB246A65EC9006".ToBytes();
			var ephemeralPublicKey = "7A2E7A854F6545905124364063633C6CF19EDFACFDE47A5F4BFA6FB34A895ACB".ToBytes();
			var tag = "005593F8CE0F9039BA86DECA64D7A8DB55DEEAECC2328267B51236435963AF0AC8439122E16F706EC4E8A1AA5EA7D806".ToBytes();
			var iv = "35A7280C603BC2242002BF6E00F9253A".ToBytes();
			var encryptedSymmetricKey = "2BC960C7F929625157ADB31757C9B8E84B43C310B7FA12FA50547EC17DB51AC089C535E784ADF64D3C2851ACBB4C387A".ToBytes();
			var actual = new PublicKeyRecipient(id,ephemeralPublicKey,tag,iv,encryptedSymmetricKey).GetDerEncoded();

			Assert.Equal(expected,actual);
		}
	}
}